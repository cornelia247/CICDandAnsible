
version: 2.1

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command:  |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
jobs:

  create_infrastructures: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
                --region us-east-1
  # create_infrastructure: 
  #     docker:
  #       - image: amazon/aws-cli
  #     steps:
  #       - checkout
  #       - run:
  #           name: Create Cloudformation Stack
  #           command: |
  #             aws cloudformation deploy \
  #               --template-file template.yml \
  #               --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
  #               --region us-east-1
  # configure_infrastructure:
  #     docker:
  #       - image: python:3.7-alpine3.11 
  #     steps:
  #       - checkout
  #       - add_ssh_keys:
  #           fingerprints: ["9a:bd:79:b6:6f:be:03:66:74:7a:48:ca:3c:f1:e3:e5"]
  #       - run:
  #           name: install openssh
  #           command:  apk add --update openssh
  #       - run:
  #           name: install Ansible
  #           command: apk add --update ansible
  #       - run: 
  #           name: Run Playbook and configure server
  #           command: ansible-playbook -i inventory main.yml
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run: apk add --update curl
      - run: 
          name: Test job
          command: return 1
      - destroy_environment

workflows:
  create-infrastructure-workflow:
    jobs:
      - create_infrastructures
      # - configure_infrastructure
      - smoke_test
      - destroy_environment
